// Generated by CoffeeScript 1.12.4
(function() {
  var MAX_HTTP_REQUEST_LENGTH, Settings, WebApiManager, logger, request;

  request = require("requestretry");

  logger = require("logger-sharelatex");

  Settings = require("settings-sharelatex");

  MAX_HTTP_REQUEST_LENGTH = 15000;

  module.exports = WebApiManager = {
    sendRequest: function(url, callback) {
      if (callback == null) {
        callback = function(error, body) {};
      }
      return request.get({
        url: "" + Settings.apis.web.url + url,
        timeout: MAX_HTTP_REQUEST_LENGTH,
        maxAttempts: 2,
        auth: {
          user: Settings.apis.web.user,
          pass: Settings.apis.web.pass,
          sendImmediately: true
        }
      }, function(error, res, body) {
        if (error != null) {
          return callback(error);
        }
        if (res.statusCode === 404) {
          logger.log({
            url: url
          }, "got 404 from web api");
          return callback(null, null);
        }
        if (res.statusCode >= 200 && res.statusCode < 300) {
          return callback(null, body);
        } else {
          error = new Error("web returned a non-success status code: " + res.statusCode + " (attempts: " + res.attempts + ")");
          return callback(error);
        }
      });
    },
    getUserInfo: function(user_id, callback) {
      var url;
      if (callback == null) {
        callback = function(error, userInfo) {};
      }
      url = "/user/" + user_id + "/personal_info";
      logger.log({
        user_id: user_id
      }, "getting user info from web");
      return WebApiManager.sendRequest(url, function(error, body) {
        var user;
        if (error != null) {
          logger.error({
            err: error,
            user_id: user_id,
            url: url
          }, "error accessing web");
          return callback(error);
        }
        if (body === null) {
          logger.error({
            user_id: user_id,
            url: url
          }, "no user found");
          return callback(null, null);
        }
        try {
          user = JSON.parse(body);
        } catch (error1) {
          error = error1;
          return callback(error);
        }
        return callback(null, {
          id: user.id,
          email: user.email,
          first_name: user.first_name,
          last_name: user.last_name
        });
      });
    },
    getProjectDetails: function(project_id, callback) {
      var url;
      if (callback == null) {
        callback = function(error, details) {};
      }
      url = "/project/" + project_id + "/details";
      logger.log({
        project_id: project_id
      }, "getting project details from web");
      return WebApiManager.sendRequest(url, function(error, body) {
        var project;
        if (error != null) {
          logger.error({
            err: error,
            project_id: project_id,
            url: url
          }, "error accessing web");
          return callback(error);
        }
        try {
          project = JSON.parse(body);
        } catch (error1) {
          error = error1;
          return callback(error);
        }
        return callback(null, project);
      });
    }
  };

}).call(this);

//# sourceMappingURL=WebApiManager.js.map
